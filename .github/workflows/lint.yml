name: eslint

on: 
  push: 
    branches: [main]
  pull_request: 
    branches: [main]
    
jobs: 
  generate-badges:
    runs-on: ubuntu-latest
    container: 
      image: debian:stretch-slim
    steps: 
      - uses: actions/checkout@v2
      - run: echo "github_sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Make Latest Commit badge
        uses: action-badges/core@0.2.1
        with:
          label: latest commit
          message: "${{ env.github_sha_short }}"
          message-color: blue
          file-name: latest-commit.svg
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          
  eslint:
    runs-on: ubuntu-latest
    container:
      image: debian:stretch-slim
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.0'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Lint source code with ESLint
        run: yarn lint

  prettier:
    runs-on: ubuntu-latest
    container:
      image: debian:stretch-slim
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.0'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Check code format with Prettier
        run: yarn check-format

  tests:
    runs-on: ubuntu-latest
    container:
      image: debian:stretch-slim
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.0'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Run Unit Tests with Jest
        run: yarn test
